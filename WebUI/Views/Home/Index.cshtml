@using System.Configuration
@using Data
@using WebUI.Controllers
@model HomeController.SearchQuery
@{
    Layout = null;
    var actualModel = Model ?? new HomeController.SearchQuery
    {
        TagSearchType = 1,
        Closed = 1,
        CloseReason = 0,
        Deleted = 1,
        HasReview = 0,
        TagSearch = string.Empty,
        VoteCount = 4,
        VoteCountCompare = 1
    };
}

<html>
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <style type="text/css">
        .options {
            padding: 5px;
        }
        input[type="text"] {
            height: 30px;
            padding-bottom: 3px;
        }
        .filterName {
            width: 70px;
        }
        .optionItem {
            padding: 10px;
        }

        #cover {
            background: url("http://www.aveva.com/Images/ajax-loader.gif") no-repeat scroll center center #FFF;
            position: absolute;
            height: 100%;
            width: 100%;
        }
        .sortableTableHeader {
            cursor: pointer;
        }
        .sortAsc::after {
            content: ' ▲'
        }
        .sortDesc::after {
            content: ' ▼'
        }
    </style>
    <title>SOCloseVoteTracker 1.1</title>
</head>
<body>

    <div id="cover" style="z-index: 999"></div>
    <div id="topContainer" class="container" style="margin-top: 20px">
    <a style="float: right;" href="https://github.com/rjrudman/SOCloseVoteTracker">
        <svg height="28" version="1.1" viewBox="0 0 16 16" width="28"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z"></path></svg>
        Open Source
    </a>
    @Html.ActionLink("Clear hidden questions", "ClearHiddenQuestions")
    <br/>
    <br/>
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#Interface" aria-controls="Interface" role="tab" data-toggle="tab">Interface</a></li>
        <li role="presentation"><a href="#RawSQL" aria-controls="RawSQL" role="tab" data-toggle="tab">Raw SQL</a></li>
    </ul>
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="Interface">
            <div class="options">
                <a id="idHardLink" style="float: right;margin-top: 15px;" href="javascript:void(0);">PermaLink Filter</a>
                <div class="optionItem">
                    <label class="filterName">Tags</label>
                    <input id="txtTags" type="text" value="@actualModel.TagSearch"/>
                    <div id="tags" class="btn-group" data-toggle="buttons"></div>
                </div>
                <div class="optionItem">
                    <label class="filterName">Closed</label>
                    <div id="closed" class="btn-group" data-toggle="buttons"> </div>
                </div>
                <div class="optionItem">
                    <label class="filterName">Deleted</label>
                    <div id="deleted" class="btn-group" data-toggle="buttons"> </div>
                </div>
                <div class="optionItem">
                    <label class="filterName">Has Review</label>
                    <div id="hasreview" class="btn-group" data-toggle="buttons"> </div>
                </div>
                <div class="optionItem">
                    <label class="filterName">Votes</label>

                    <div id="voteCountCompare" class="btn-group" data-toggle="buttons"> </div>
                    <div id="voteCount" class="btn-group" data-toggle="buttons"> </div>
                </div>

                <div class="optionItem">
                    <label class="filterName">Close Reason</label><br/>
                    <div id="closeReasonGroup" class="btn-group" data-toggle="buttons"> </div>
                </div>

                <br/>
                <button id="submit" style="margin-bottom: 10px;" type="submit" class="btn btn-default">Search</button>
                <table id="simpleTable" class="table"></table>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="RawSQL">
            <div style="padding: 15px;">
                Yes! You can run raw SQL! <a href="/DatabaseDiagram.png">Click here</a> to see the database diagram <br/><br/>
                <b>Server:</b> soclosevotetrackerdbserver.database.windows.net,1433<br/>
                <b>Username:</b> SOCVRReadonly<br/>
                <b>Password:</b> 30QITGxS69dpd6aPRlr5mb7pkMvtAv<br/>
                <b>ADO.NET connection string:</b><br/>@ConfigurationManager.ConnectionStrings[DataContext.CONNECTION_STRING_NAME].ConnectionString<br/>
            </div>

            <textarea id="txtSql" style="width: 100%; height: 600px">SELECT TOP 100
Id as [QuestionID], Title as [PostLink], Closed, LastUpdated, COUNT(*) as NumVotes
FROM QUESTIONS
LEFT JOIN CloseVotes on CloseVotes.QuestionId = Questions.Id
WHERE Closed = 0
GROUP BY Questions.Id, Questions.Title,Questions.LastUpdated,Questions.Closed
ORDER BY COUNT(*) DESC</textarea>

            <button id="submitSql" style="margin-bottom: 10px;" type="submit" class="btn btn-default">Search</button>
            <table id="dynamicTable" class="table"></table>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-2.2.2.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>

<script type="text/javascript">

    var lastSortAsc = '@actualModel.SortAsc';
    var lastSortDesc = '@actualModel.SortDesc';
    $(function() {
        var tags = [
            { Value: 1, Text: 'Any Tags' },
            { Value: 2, Text: 'All Tags' }
        ];
        fillOptions($('#tags'), 'tags', tags, @actualModel.TagSearchType);

        var hasreview = [
            { Value: 1, Text: 'No' },
            { Value: 2, Text: 'Yes' },
            { Value: 0, Text: 'Any' }
        ];
        fillOptions($('#hasreview'), 'hasreview', hasreview, @actualModel.HasReview);

        var deleted = [
            { Value: 1, Text: 'No' },
            { Value: 2, Text: 'Yes' },
            { Value: 0, Text: 'Any' }
        ];
        fillOptions($('#deleted'), 'deleted', deleted, @actualModel.Deleted);

        var closed = [
            { Value: 1, Text: 'No' },
            { Value: 2, Text: 'Yes' },
            { Value: 0, Text: 'Any' }
        ];
        fillOptions($('#closed'), 'closed', closed, @actualModel.Closed);

        var voteCount = [
            { Value: 0, Text: '0' },
            { Value: 1, Text: '1' },
            { Value: 2, Text: '2' },
            { Value: 3, Text: '3' },
            { Value: 4, Text: '4' }
        ];
        fillOptions($('#voteCount'), 'voteCount', voteCount, @actualModel.VoteCount);

        var voteCountCompare = [
            { Value: 1, Text: '==' },
            { Value: 2, Text: '!=' },
            { Value: 3, Text: '<' },
            { Value: 4, Text: '<=' },
            { Value: 5, Text: '>' },
            { Value: 6, Text: '>=' }
        ];
        fillOptions($('#voteCountCompare'), 'voteCountCompare', voteCountCompare, @actualModel.VoteCountCompare);

        var closeReasons = [
            { Value: 0, Text: 'Any' },
            { Value: 1000, Text: 'Duplicate' },
            { Value: 1001, Text: 'Unclear' },
            { Value: 1002, Text: 'Broad' },
            { Value: 1003, Text: 'Opinion Based' },
            { Value: 4, Text: 'Hardware/Software' },
            { Value: 7, Text: 'Server/Network' },
            { Value: 16, Text: 'Offsite Resource' },
            { Value: 13, Text: 'No MCVE' },
            { Value: 11, Text: 'Typo' },
            { Value: 2, Text: 'Migration' },
            { Value: 3, Text: 'Other' }
        ];
        fillOptions($('#closeReasonGroup'), 'closeReason', closeReasons, @actualModel.CloseReason);

        $('#submit').click(makeRequest);
        $('#submitSql').click(makeSqlRequest);

        $('#idHardLink').click(function() {
            var filterData = getDataFilter();
            var p = $.param(filterData);
            window.location = '/Home/PermaLink?' + p;
        });

        $('#cover').hide();

        @if (actualModel.ImmediatelyQuery)
        {
            <text>$('#submit').click();</text>
        }
    });

    function fillOptions(group, groupName, options, defaultValue) {
        group.empty();
        for (var i = 0; i < options.length; i++) {
            var option = options[i];
            var value = option.Value;
            var text = option.Text;
            var defaultSelected = option.Value === defaultValue;

            var element = $('<label class="btn btn-primary ' + (defaultSelected ? 'active' : '') + '"> <input type="radio" name="' + groupName + '" value="' + value + '" autocomplete="off" ' + (defaultSelected ? 'checked' : '') + '>' + text + '</label>');
            group.append(element);
        }
        return group;
    }

    function renderTable(table, data) {
        table.empty();
        var headers = [];
        var i;
        for (i = 0; i < data.length; i++) {
            var row = data[i];
            if (i === 0) {
                for (var property in row) {
                    if (row.hasOwnProperty(property)) {
                        headers.push(property);
                    }
                }
            }
        }
        var head = $('<thead>');
        var headRow = $('<tr>');
        for (i = 0; i < headers.length; i++) {
            if (headers[i].toLowerCase() === 'tags') {
                headRow.append('<td>' + headers[i] + '</td>');
            } else {
                headRow.append('<td class="sortableTableHeader">' + headers[i] + '</td>');
            }
        }

        var headerMapping = {};
        for (var k = 0; k < headers.length; k++) {
            headerMapping[headers[k].toLowerCase()] = headers[k];
        }

        var body = $('<tbody>');
        for (i = 0; i < data.length; i++) {
            var htmlRow = $('<tr>');
            for (var j = 0; j < headers.length; j++) {
                var headerName = headers[j];
                var dataItem = data[i][headerName];
                var headerNameLower = headerName.toLowerCase();
                if (headerNameLower === 'questionid') {
                    htmlRow.append('<td>' + dataItem + ' <a name="' + dataItem + '" href="javascript:dismissItem(' + dataItem + ')">(Dismiss)</a></td>');
                } else if (headerNameLower === 'reviewid' && dataItem !== null) {
                    htmlRow.append('<td><a target="_blank" href="/Home/EnqueueAndRedirectReview?reviewId=' + dataItem + '">' + dataItem + '</a></td>');
                } else if (headerNameLower === 'postlink' && dataItem !== null && data[i][headerMapping['questionid']]) {
                    htmlRow.append('<td><a target="_blank" href="/Home/EnqueueAndRedirect?questionId=' + data[i][headerMapping['questionid']] + '">' + dataItem + '</a></td>');
                } else {
                    if (dataItem !== null)
                        htmlRow.append('<td>' + dataItem + "</td>");
                    else
                        htmlRow.append('<td></td>');
                }

            }
            body.append(htmlRow);
        }

        head.append(headRow);
        table.append(head);
        table.append(body);

        if (lastSortAsc !== '')
            $('.sortableTableHeader:contains("' + lastSortAsc + '")').addClass('sortAsc');

        if (lastSortDesc !== '')
            $('.sortableTableHeader:contains("' + lastSortDesc + '")').addClass('sortDesc');
    }

    function getDataFilter() {
        var tags = $('#txtTags').val();
        var tagSearchType = $('[name="tags"]:checked').val();

        var closed = $('[name="closed"]:checked').val();
        var deleted = $('[name="deleted"]:checked').val();
        var hasreview = $('[name="hasreview"]:checked').val();

        var sortAsc = lastSortAsc;
        var sortDesc = lastSortDesc;

        var voteCount = $('[name="voteCount"]:checked').val();
        var voteCountCompare = $('[name="voteCountCompare"]:checked').val();

        var closeReason = $('[name="closeReason"]:checked').val();

        var requestData = {
            TagSearch: tags,
            TagSearchType: tagSearchType,
            Closed: closed,
            Deleted: deleted,
            SortAsc: sortAsc,
            SortDesc: sortDesc,
            HasReview: hasreview,
            VoteCount: voteCount,
            VoteCountCompare: voteCountCompare,
            CloseReason: closeReason
        };
        return requestData;
    }

    function makeRequest() {
        var requestData = getDataFilter();
        showLoading();
        $.post('/Home/SearchData', requestData, function(results) {
            renderTable($('#simpleTable'), results);
            hideLoading();
            enableSorting();
        })
        .fail(function() {
            hideLoading();
            renderTable($('#simpleTable'), [{ Error: 'Error occured while searching.'}]);
        });
    }

    function makeSqlRequest() {
        var sql = $('#txtSql').val();
        showLoading();
        $.post('/Home/RunSQL', { sql: sql }, function(results) {
            renderTable($('#dynamicTable'), results);
            hideLoading();
        })
        .fail(function() {
            hideLoading();
            renderTable($('#simpleTable'), [{ Error: 'Error occured while searching.'}]);
        });
    }

    function dismissItem(questionId) {
        var link = $('a[name="' + questionId + '"]');
        var row = link.parent().parent();
        row.fadeOut();

        $.post('/Home/HideQuestion', { questionId: questionId }, function(results) {});
    }

    function displaySorting() {

    }

    function enableSorting() {
        $('.sortableTableHeader').click(function(element) {
            var header = $(element.currentTarget);

            var hadSortAsc = header.hasClass('sortAsc');
            var hadSortDesc = header.hasClass('sortDesc');

            $('.sortAsc').removeClass('sortAsc');
            $('.sortDesc').removeClass('sortDesc');

            if (hadSortAsc) {
                header.addClass('sortDesc');
            } else if (!hadSortDesc) {
                header.addClass('sortAsc');
            }

            lastSortAsc = $('.sortAsc').text();
            lastSortDesc = $('.sortDesc').text();

            makeRequest();
        });
    }

    function showLoading() {
        $('#topContainer').hide();
        $('#cover').fadeIn();
    }

    function hideLoading() {
        $('#cover').fadeOut(function() { $('#topContainer').show(); });
    }

</script>
</body>
</html>